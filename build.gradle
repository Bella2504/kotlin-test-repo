import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
	id "org.jetbrains.kotlin.plugin.jpa" version "1.9.22"
}

group = 'js.demo'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.data:spring-data-jpa'
	implementation 'org.springframework.data:spring-data-commons'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'org.hibernate:hibernate-entitymanager:5.5.9.Final'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.22'
	implementation 'io.github.microutils:kotlin-logging-jvm:2.0.11'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure:3.2.3'
	testImplementation "org.jetbrains.kotlin:kotlin-test"
	testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.9.22"
	testImplementation "io.kotlintest:kotlintest-extensions-spring:3.1.10"
	testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.4.2'
	testImplementation 'org.mockito.kotlin:mockito-kotlin:5.2.1'
	testCompileOnly 'org.junit.jupiter:junit-jupiter:5.6.0'
}

tasks.withType(Test).configureEach {
	useJUnitPlatform()
	testLogging {     // This is for logging and can be removed.
		events("passed", "skipped", "failed")
	}
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '21'
	}
}